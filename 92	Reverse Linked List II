/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int m, int n) {
        if(head == NULL || m > n ) return NULL;
        ListNode *dummy = new ListNode(0);
        dummy->next = head;
        head = dummy;
        
        for(int i = 1; i < m ; i++){
            if(!head->next) return NULL;
            head = head->next;
        }
        ListNode *pre = head;
        ListNode *mnode = head->next;
        ListNode *post = mnode->next;
        ListNode *nnode = mnode;
        for(int i = m; i < n; i++){
            if(!post) return NULL;
            ListNode *nextround = post->next;
            post->next = nnode;
            nnode = post;
            post = nextround;
        }
        mnode->next = post;
        pre->next = nnode;
        return dummy->next;
    }
    
};
